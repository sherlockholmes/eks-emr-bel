# An example of ClusterConfig object using an existing VPC:
--- 
apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: eksbel-dev
  region: us-east-1

vpc:
  id: "vpc-03f49a2926c1dcd31"  # (optional, must match VPC ID used for each subnet below)
  cidr: "192.168.0.0/16"       # (optional, must match CIDR used by the given VPC)
  subnets:
    # must provide 'private' and/or 'public' subnets by availibility zone as shown
    public:
      us-east-1a:
        id: "subnet-07fbedd0910b82329"
        cidr: "192.168.0.0/20" # (optional, must match CIDR used by the given subnet)

      us-east-1b:
        id: "subnet-019feda4e575ad3bb"
        cidr: "192.168.64.0/20"  # (optional, must match CIDR used by the given subnet)
    
    private:
      us-east-1a:
        id: "subnet-04ceaa17e7b24107e"
        cidr: "192.168.128.0/20" # (optional, must match CIDR used by the given subnet)

      us-east-1b:
        id: "subnet-013c7665373a4d20d"
        cidr: "192.168.192.0/20"  # (optional, must match CIDR used by the given subnet)

managedNodeGroups:
  - name: ng-1-workers
    #labels: { role: workers }
    instanceType: t4g.large
    desiredCapacity: 2
    volumeSize: 80
    privateNetworking: true
    
fargateProfiles:
  - name: fp-beldev
    selectors:
      # All workloads in the "default" Kubernetes namespace will be
      # scheduled onto Fargate:
      - namespace: default
      # All workloads in the "kube-system" Kubernetes namespace will be
      # scheduled onto Fargate:
      - namespace: kube-system
    subnets: [ "subnet-04ceaa17e7b24107e", "subnet-013c7665373a4d20d" ]
      
  - name: fp-belemr
    selectors:
      # All workloads in the "dev" Kubernetes namespace matching the following
      # label selectors will be scheduled onto Fargate:
      - namespace: dev
        labels:
          env: dev
          checks: passed
    subnets: [ "subnet-04ceaa17e7b24107e", "subnet-013c7665373a4d20d" ]
    tags:
      env: dev
      name: fp-beldev